#!/usr/bin/env python
PACKAGE = "fav_state_estimation"

import roslib
roslib.load_manifest(PACKAGE)
from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

commands = gen.add_group('commands')
commands.add("calibrate_surface_pressure", bool_t, 0, "Current Pressure = Surface Pressure",    False)
commands.add("reset_sigma", bool_t, 0, "Reset Sigma Matrix",    False)
commands.add("reset_lin_vel", bool_t, 0, "Reset Linear Velocity Esimate",    False)
commands.add("reset_mu", bool_t, 0, "Reset Esimated State",    False)

tags = gen.add_group('tags')
tag_1 = tags.add_group('tag_1')
tag_1.add("x", double_t, 0, "x-Position of Tag 1", 0.5, 0, 1.6)
tag_1.add("y", double_t, 0, "y-Position of Tag 1", 3.35, 0, 3.35)
tag_1.add("z", double_t, 0, "z-Position of Tag 1", -0.5, -1.4, 0)
tag_2 = tags.add_group('tag_2')
tag_2.add("x", double_t, 0, "x-Position of Tag 2", 1.1, 0, 1.6)
tag_2.add("y", double_t, 0, "y-Position of Tag 2", 3.35, 0, 3.35)
tag_2.add("z", double_t, 0, "z-Position of Tag 2", -0.5, -1.4, 0)
tag_3 = tags.add_group('tag_3')
tag_3.add("x", double_t, 0, "x-Position of Tag 3", 0.5, 0, 1.6)
tag_3.add("y", double_t, 0, "y-Position of Tag 3", 3.35, 0, 3.35)
tag_3.add("z", double_t, 0, "z-Position of Tag 3", -0.9, -1.4, 0)
tag_4 = tags.add_group('tag_4')
tag_4.add("x", double_t, 0, "x-Position of Tag 4", 1.1, 0, 1.6)
tag_4.add("y", double_t, 0, "y-Position of Tag 4", 3.35, 0, 3.35)
tag_4.add("z", double_t, 0, "z-Position of Tag 4", -0.9, -1.4, 0)

smo = gen.add_group('smo')
smo.add("rho", double_t, 0, "SMO Parameter",    2.5, 0)
smo.add("phi", double_t, 0, "SMO Parameter",    0.3, 0)
smo.add("tau", double_t, 0, "SMO Parameter",    0.1, 0)

motion = gen.add_group('motion_covariance')
motion.add("Rx", double_t, 0, "x-Covariance of Motion Model",    0.1, 0)
motion.add("Ry", double_t, 0, "y-Covariance of Motion Model",    0.1, 0)
motion.add("Rz", double_t, 0, "z-Covariance of Motion Model",    0.1, 0)
motion.add("Rdx", double_t, 0, "x_dot-Covariance of Motion Model",    0.1, 0)
motion.add("Rdy", double_t, 0, "y_dot-Covariance of Motion Model",    0.1, 0)
motion.add("Rdz", double_t, 0, "z_dot-Covariance of Motion Model",    0.1, 0)

pressure = gen.add_group('pressure_covariance')
pressure.add("Q_press", double_t, 0, "Covariance of Depth from Pressure Measurement",    0.0001, 0)

range = gen.add_group('range_covariance')
range.add("Q_range_0", double_t, 0, "constant Covariance of Range Sensor",    0.01, 0)
range.add("Q_range_lin_fac", double_t, 0, "Factor for linear Covariance of Range Sensor",    0.001, 0)

scale = gen.add_group('covariance_scaling')
scale.add("scaling_variable", double_t, 0, "cov = (1+c)*cov",    1e-9, 0, 1e-6)

exit(gen.generate(PACKAGE, "state_estimation", "StateEstimation"))
