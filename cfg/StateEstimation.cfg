#!/usr/bin/env python
PACKAGE = "fav_state_estimation"

import roslib
roslib.load_manifest(PACKAGE)
from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

commands = gen.add_group('commands')
commands.add("calibrate_surface_pressure", bool_t, 0, "Current Pressure = Surface Pressure",    False)
commands.add("reset_sigma", bool_t, 0, "Reset Sigma Matrix",    False)
commands.add("reset_lin_vel", bool_t, 0, "Reset Linear Velocity Esimate",    False)
commands.add("reset_mu", bool_t, 0, "Reset Esimated State",    False)

tag_system = gen.add_group('tag_system')
tag_system.add("tag_1_x", double_t, 0, "x-Position of Tag 1", 0.5, 0, 1.6)
tag_system.add("tag_1_y", double_t, 0, "y-Position of Tag 1", 3.35, 0, 3.35)
tag_system.add("tag_1_z", double_t, 0, "z-Position of Tag 1", -0.5, -1.4, 0)
tag_system.add("orientation", int_t, 0, "Orientation of Tag System", 0, -180, 180)

motion = gen.add_group('motion_covariance')
motion.add("Rx", double_t, 0, "x-Covariance of Motion Model",    1e-2, 0, 1.0)
motion.add("Ry", double_t, 0, "y-Covariance of Motion Model",    1e-2, 0, 1.0)
motion.add("Rz", double_t, 0, "z-Covariance of Motion Model",    1e-2, 0, 1.0)
motion.add("Rdx", double_t, 0, "x_dot-Covariance of Motion Model",    1e-4, 0, 1.0)
motion.add("Rdy", double_t, 0, "y_dot-Covariance of Motion Model",    1e-4, 0, 1.0)
motion.add("Rdz", double_t, 0, "z_dot-Covariance of Motion Model",    1e-4, 0, 1.0)

pressure = gen.add_group('pressure_covariance')
pressure.add("Q_press", double_t, 0, "Covariance of Depth from Pressure Measurement",    0.0001, 0)

range = gen.add_group('range_covariance')
range.add("Q_range_0", double_t, 0, "constant Covariance of Range Sensor",    0.1, 0)
range.add("Q_range_lin_fac", double_t, 0, "Factor for linear Covariance of Range Sensor",    0.01, 0)

scale = gen.add_group('covariance_scaling')
scale.add("scaling_variable", double_t, 0, "cov = (1+c)*cov",    0.015, 0)

smo = gen.add_group('SMO')
smo_x = smo.add_group('x')
smo_x.add("rho_x", double_t, 0, "rho for x-velocity",    0.4, 0)
smo_x.add("phi_x", double_t, 0, "phi for x-velocity",    1.0, 0)
smo_x.add("tau_x", double_t, 0, "tau for x-velocity",    0.2, 0)
smo_y = smo.add_group('y')
smo_y.add("rho_y", double_t, 0, "rho for y-velocity",    0.4, 0)
smo_y.add("phi_y", double_t, 0, "phi for y-velocity",    1.0, 0)
smo_y.add("tau_y", double_t, 0, "tau for y-velocity",    0.2, 0)
smo_z = smo.add_group('z')
smo_z.add("rho_z", double_t, 0, "rho for z-velocity",    2.5, 0)
smo_z.add("phi_z", double_t, 0, "phi for z-velocity",    0.3, 0)
smo_z.add("tau_z", double_t, 0, "tau for z-velocity",    0.1, 0)


exit(gen.generate(PACKAGE, "state_estimation", "StateEstimation"))
